package biodiv;
// Generated 31 Jul, 2017 7:18:53 AM by Hibernate Tools 3.5.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * SpeciesGroup generated by hbm2java
 */
@Entity
@Table(name = "species_group", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class SpeciesGroup implements java.io.Serializable {

	private long id;
	private SpeciesGroup speciesGroup;
	private String name;
	private Integer groupOrder;
	private Set suserSpeciesGroups = new HashSet(0);
	private Set speciesGroups = new HashSet(0);
	private Set documentSpeciesGroups = new HashSet(0);
	private Set speciesGroupMappings = new HashSet(0);
	private Set userGroupSpeciesGroups = new HashSet(0);
	private Set taxonomyDefinitions = new HashSet(0);
	private Set observations = new HashSet(0);
	private Set coverageSpeciesGroups = new HashSet(0);
	private Set documents = new HashSet(0);

	public SpeciesGroup() {
	}

	public SpeciesGroup(long id, String name) {
		this.id = id;
		this.name = name;
	}

	public SpeciesGroup(long id, SpeciesGroup speciesGroup, String name, Integer groupOrder, Set suserSpeciesGroups,
			Set speciesGroups, Set documentSpeciesGroups, Set speciesGroupMappings, Set userGroupSpeciesGroups,
			Set taxonomyDefinitions, Set observations, Set coverageSpeciesGroups, Set documents) {
		this.id = id;
		this.speciesGroup = speciesGroup;
		this.name = name;
		this.groupOrder = groupOrder;
		this.suserSpeciesGroups = suserSpeciesGroups;
		this.speciesGroups = speciesGroups;
		this.documentSpeciesGroups = documentSpeciesGroups;
		this.speciesGroupMappings = speciesGroupMappings;
		this.userGroupSpeciesGroups = userGroupSpeciesGroups;
		this.taxonomyDefinitions = taxonomyDefinitions;
		this.observations = observations;
		this.coverageSpeciesGroups = coverageSpeciesGroups;
		this.documents = documents;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_group_id")
	public SpeciesGroup getSpeciesGroup() {
		return this.speciesGroup;
	}

	public void setSpeciesGroup(SpeciesGroup speciesGroup) {
		this.speciesGroup = speciesGroup;
	}

	@Column(name = "name", unique = true, nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "group_order")
	public Integer getGroupOrder() {
		return this.groupOrder;
	}

	public void setGroupOrder(Integer groupOrder) {
		this.groupOrder = groupOrder;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesGroup")
	public Set getSuserSpeciesGroups() {
		return this.suserSpeciesGroups;
	}

	public void setSuserSpeciesGroups(Set suserSpeciesGroups) {
		this.suserSpeciesGroups = suserSpeciesGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesGroup")
	public Set getSpeciesGroups() {
		return this.speciesGroups;
	}

	public void setSpeciesGroups(Set speciesGroups) {
		this.speciesGroups = speciesGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesGroup")
	public Set getDocumentSpeciesGroups() {
		return this.documentSpeciesGroups;
	}

	public void setDocumentSpeciesGroups(Set documentSpeciesGroups) {
		this.documentSpeciesGroups = documentSpeciesGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesGroup")
	public Set getSpeciesGroupMappings() {
		return this.speciesGroupMappings;
	}

	public void setSpeciesGroupMappings(Set speciesGroupMappings) {
		this.speciesGroupMappings = speciesGroupMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesGroup")
	public Set getUserGroupSpeciesGroups() {
		return this.userGroupSpeciesGroups;
	}

	public void setUserGroupSpeciesGroups(Set userGroupSpeciesGroups) {
		this.userGroupSpeciesGroups = userGroupSpeciesGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesGroup")
	public Set getTaxonomyDefinitions() {
		return this.taxonomyDefinitions;
	}

	public void setTaxonomyDefinitions(Set taxonomyDefinitions) {
		this.taxonomyDefinitions = taxonomyDefinitions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesGroup")
	public Set getObservations() {
		return this.observations;
	}

	public void setObservations(Set observations) {
		this.observations = observations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesGroup")
	public Set getCoverageSpeciesGroups() {
		return this.coverageSpeciesGroups;
	}

	public void setCoverageSpeciesGroups(Set coverageSpeciesGroups) {
		this.coverageSpeciesGroups = coverageSpeciesGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesGroup")
	public Set getDocuments() {
		return this.documents;
	}

	public void setDocuments(Set documents) {
		this.documents = documents;
	}

}
