package biodiv;
// Generated 31 Jul, 2017 7:18:53 AM by Hibernate Tools 3.5.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "project", schema = "public")
public class Project implements java.io.Serializable {

	private long id;
	private long version;
	private Suser suser;
	private StrategicDirection strategicDirection;
	private Date dateCreated;
	private Date grantFrom;
	private Date grantTo;
	private int grantedAmount;
	private String granteeContact;
	private String granteeEmail;
	private String granteeLogo;
	private String granteeOrganization;
	private Date lastUpdated;
	private String misc;
	private String projectProposal;
	private String projectReport;
	private String summary;
	private String title;
	private Set projectDocumentsForProjectReportFilesId = new HashSet(0);
	private Set projectDocumentsForProjectProposalFilesId = new HashSet(0);
	private Set projectDocumentsForProjectMiscFilesId = new HashSet(0);
	private Set userGroups = new HashSet(0);

	public Project() {
	}

	public Project(long id, Suser suser, Date dateCreated, int grantedAmount, Date lastUpdated, String title) {
		this.id = id;
		this.suser = suser;
		this.dateCreated = dateCreated;
		this.grantedAmount = grantedAmount;
		this.lastUpdated = lastUpdated;
		this.title = title;
	}

	public Project(long id, Suser suser, StrategicDirection strategicDirection, Date dateCreated, Date grantFrom,
			Date grantTo, int grantedAmount, String granteeContact, String granteeEmail, String granteeLogo,
			String granteeOrganization, Date lastUpdated, String misc, String projectProposal, String projectReport,
			String summary, String title, Set projectDocumentsForProjectReportFilesId,
			Set projectDocumentsForProjectProposalFilesId, Set projectDocumentsForProjectMiscFilesId, Set userGroups) {
		this.id = id;
		this.suser = suser;
		this.strategicDirection = strategicDirection;
		this.dateCreated = dateCreated;
		this.grantFrom = grantFrom;
		this.grantTo = grantTo;
		this.grantedAmount = grantedAmount;
		this.granteeContact = granteeContact;
		this.granteeEmail = granteeEmail;
		this.granteeLogo = granteeLogo;
		this.granteeOrganization = granteeOrganization;
		this.lastUpdated = lastUpdated;
		this.misc = misc;
		this.projectProposal = projectProposal;
		this.projectReport = projectReport;
		this.summary = summary;
		this.title = title;
		this.projectDocumentsForProjectReportFilesId = projectDocumentsForProjectReportFilesId;
		this.projectDocumentsForProjectProposalFilesId = projectDocumentsForProjectProposalFilesId;
		this.projectDocumentsForProjectMiscFilesId = projectDocumentsForProjectMiscFilesId;
		this.userGroups = userGroups;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id", nullable = false)
	public Suser getSuser() {
		return this.suser;
	}

	public void setSuser(Suser suser) {
		this.suser = suser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "direction_id")
	public StrategicDirection getStrategicDirection() {
		return this.strategicDirection;
	}

	public void setStrategicDirection(StrategicDirection strategicDirection) {
		this.strategicDirection = strategicDirection;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_created", nullable = false, length = 29)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "grant_from", length = 29)
	public Date getGrantFrom() {
		return this.grantFrom;
	}

	public void setGrantFrom(Date grantFrom) {
		this.grantFrom = grantFrom;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "grant_to", length = 29)
	public Date getGrantTo() {
		return this.grantTo;
	}

	public void setGrantTo(Date grantTo) {
		this.grantTo = grantTo;
	}

	@Column(name = "granted_amount", nullable = false)
	public int getGrantedAmount() {
		return this.grantedAmount;
	}

	public void setGrantedAmount(int grantedAmount) {
		this.grantedAmount = grantedAmount;
	}

	@Column(name = "grantee_contact")
	public String getGranteeContact() {
		return this.granteeContact;
	}

	public void setGranteeContact(String granteeContact) {
		this.granteeContact = granteeContact;
	}

	@Column(name = "grantee_email")
	public String getGranteeEmail() {
		return this.granteeEmail;
	}

	public void setGranteeEmail(String granteeEmail) {
		this.granteeEmail = granteeEmail;
	}

	@Column(name = "grantee_logo")
	public String getGranteeLogo() {
		return this.granteeLogo;
	}

	public void setGranteeLogo(String granteeLogo) {
		this.granteeLogo = granteeLogo;
	}

	@Column(name = "grantee_organization")
	public String getGranteeOrganization() {
		return this.granteeOrganization;
	}

	public void setGranteeOrganization(String granteeOrganization) {
		this.granteeOrganization = granteeOrganization;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", nullable = false, length = 29)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "misc")
	public String getMisc() {
		return this.misc;
	}

	public void setMisc(String misc) {
		this.misc = misc;
	}

	@Column(name = "project_proposal")
	public String getProjectProposal() {
		return this.projectProposal;
	}

	public void setProjectProposal(String projectProposal) {
		this.projectProposal = projectProposal;
	}

	@Column(name = "project_report")
	public String getProjectReport() {
		return this.projectReport;
	}

	public void setProjectReport(String projectReport) {
		this.projectReport = projectReport;
	}

	@Column(name = "summary")
	public String getSummary() {
		return this.summary;
	}

	public void setSummary(String summary) {
		this.summary = summary;
	}

	@Column(name = "title", nullable = false)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectByProjectReportFilesId")
	public Set getProjectDocumentsForProjectReportFilesId() {
		return this.projectDocumentsForProjectReportFilesId;
	}

	public void setProjectDocumentsForProjectReportFilesId(Set projectDocumentsForProjectReportFilesId) {
		this.projectDocumentsForProjectReportFilesId = projectDocumentsForProjectReportFilesId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectByProjectProposalFilesId")
	public Set getProjectDocumentsForProjectProposalFilesId() {
		return this.projectDocumentsForProjectProposalFilesId;
	}

	public void setProjectDocumentsForProjectProposalFilesId(Set projectDocumentsForProjectProposalFilesId) {
		this.projectDocumentsForProjectProposalFilesId = projectDocumentsForProjectProposalFilesId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectByProjectMiscFilesId")
	public Set getProjectDocumentsForProjectMiscFilesId() {
		return this.projectDocumentsForProjectMiscFilesId;
	}

	public void setProjectDocumentsForProjectMiscFilesId(Set projectDocumentsForProjectMiscFilesId) {
		this.projectDocumentsForProjectMiscFilesId = projectDocumentsForProjectMiscFilesId;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_group_projects", schema = "public", joinColumns = {
			@JoinColumn(name = "project_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_group_id", nullable = false, updatable = false) })
	public Set getUserGroups() {
		return this.userGroups;
	}

	public void setUserGroups(Set userGroups) {
		this.userGroups = userGroups;
	}

}
