package biodiv;
// Generated 31 Jul, 2017 7:18:53 AM by Hibernate Tools 3.5.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Discussion generated by hbm2java
 */
@Entity
@Table(name = "discussion", schema = "public")
public class Discussion implements java.io.Serializable {

	private long id;
	private long version;
	private Language language;
	private Suser suser;
	private boolean agreeTerms;
	private String body;
	private Date createdOn;
	private int featureCount;
	private int flagCount;
	private boolean isDeleted;
	private Date lastRevised;
	private String plainText;
	private String subject;
	private long visitCount;
	private Set userGroups = new HashSet(0);

	public Discussion() {
	}

	public Discussion(long id, Language language, Suser suser, boolean agreeTerms, String body, Date createdOn,
			int featureCount, int flagCount, boolean isDeleted, Date lastRevised, String plainText, String subject,
			long visitCount) {
		this.id = id;
		this.language = language;
		this.suser = suser;
		this.agreeTerms = agreeTerms;
		this.body = body;
		this.createdOn = createdOn;
		this.featureCount = featureCount;
		this.flagCount = flagCount;
		this.isDeleted = isDeleted;
		this.lastRevised = lastRevised;
		this.plainText = plainText;
		this.subject = subject;
		this.visitCount = visitCount;
	}

	public Discussion(long id, Language language, Suser suser, boolean agreeTerms, String body, Date createdOn,
			int featureCount, int flagCount, boolean isDeleted, Date lastRevised, String plainText, String subject,
			long visitCount, Set userGroups) {
		this.id = id;
		this.language = language;
		this.suser = suser;
		this.agreeTerms = agreeTerms;
		this.body = body;
		this.createdOn = createdOn;
		this.featureCount = featureCount;
		this.flagCount = flagCount;
		this.isDeleted = isDeleted;
		this.lastRevised = lastRevised;
		this.plainText = plainText;
		this.subject = subject;
		this.visitCount = visitCount;
		this.userGroups = userGroups;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "language_id", nullable = false)
	public Language getLanguage() {
		return this.language;
	}

	public void setLanguage(Language language) {
		this.language = language;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id", nullable = false)
	public Suser getSuser() {
		return this.suser;
	}

	public void setSuser(Suser suser) {
		this.suser = suser;
	}

	@Column(name = "agree_terms", nullable = false)
	public boolean isAgreeTerms() {
		return this.agreeTerms;
	}

	public void setAgreeTerms(boolean agreeTerms) {
		this.agreeTerms = agreeTerms;
	}

	@Column(name = "body", nullable = false)
	public String getBody() {
		return this.body;
	}

	public void setBody(String body) {
		this.body = body;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", nullable = false, length = 29)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "feature_count", nullable = false)
	public int getFeatureCount() {
		return this.featureCount;
	}

	public void setFeatureCount(int featureCount) {
		this.featureCount = featureCount;
	}

	@Column(name = "flag_count", nullable = false)
	public int getFlagCount() {
		return this.flagCount;
	}

	public void setFlagCount(int flagCount) {
		this.flagCount = flagCount;
	}

	@Column(name = "is_deleted", nullable = false)
	public boolean isIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_revised", nullable = false, length = 29)
	public Date getLastRevised() {
		return this.lastRevised;
	}

	public void setLastRevised(Date lastRevised) {
		this.lastRevised = lastRevised;
	}

	@Column(name = "plain_text", nullable = false)
	public String getPlainText() {
		return this.plainText;
	}

	public void setPlainText(String plainText) {
		this.plainText = plainText;
	}

	@Column(name = "subject", nullable = false)
	public String getSubject() {
		return this.subject;
	}

	public void setSubject(String subject) {
		this.subject = subject;
	}

	@Column(name = "visit_count", nullable = false)
	public long getVisitCount() {
		return this.visitCount;
	}

	public void setVisitCount(long visitCount) {
		this.visitCount = visitCount;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_group_discussions", schema = "public", joinColumns = {
			@JoinColumn(name = "discussion_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_group_id", nullable = false, updatable = false) })
	public Set getUserGroups() {
		return this.userGroups;
	}

	public void setUserGroups(Set userGroups) {
		this.userGroups = userGroups;
	}

}
