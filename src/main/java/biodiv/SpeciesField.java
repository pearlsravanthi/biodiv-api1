package biodiv;
// Generated 31 Jul, 2017 7:18:53 AM by Hibernate Tools 3.5.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * SpeciesField generated by hbm2java
 */
@Entity
@Table(name = "species_field", schema = "public")
public class SpeciesField implements java.io.Serializable {

	private long id;
	private long version;
	private Language language;
	private Country country;
	private Species species;
	private Field field;
	private Suser suser;
	private String description;
	private String status;
	private String class_;
	private Date dateCreated;
	private Date lastUpdated;
	private Date uploadTime;
	private Set references = new HashSet(0);
	private Set speciesFieldAudienceTypeses = new HashSet(0);
	private Set speciesFieldLicenses = new HashSet(0);
	private Set speciesFieldContributors = new HashSet(0);
	private Set resources = new HashSet(0);

	public SpeciesField() {
	}

	public SpeciesField(long id, Language language, Species species, Field field, String description, String status,
			String class_) {
		this.id = id;
		this.language = language;
		this.species = species;
		this.field = field;
		this.description = description;
		this.status = status;
		this.class_ = class_;
	}

	public SpeciesField(long id, Language language, Country country, Species species, Field field, Suser suser,
			String description, String status, String class_, Date dateCreated, Date lastUpdated, Date uploadTime,
			Set references, Set speciesFieldAudienceTypeses, Set speciesFieldLicenses, Set speciesFieldContributors,
			Set resources) {
		this.id = id;
		this.language = language;
		this.country = country;
		this.species = species;
		this.field = field;
		this.suser = suser;
		this.description = description;
		this.status = status;
		this.class_ = class_;
		this.dateCreated = dateCreated;
		this.lastUpdated = lastUpdated;
		this.uploadTime = uploadTime;
		this.references = references;
		this.speciesFieldAudienceTypeses = speciesFieldAudienceTypeses;
		this.speciesFieldLicenses = speciesFieldLicenses;
		this.speciesFieldContributors = speciesFieldContributors;
		this.resources = resources;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "language_id", nullable = false)
	public Language getLanguage() {
		return this.language;
	}

	public void setLanguage(Language language) {
		this.language = language;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "country_id")
	public Country getCountry() {
		return this.country;
	}

	public void setCountry(Country country) {
		this.country = country;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "species_id", nullable = false)
	public Species getSpecies() {
		return this.species;
	}

	public void setSpecies(Species species) {
		this.species = species;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "field_id", nullable = false)
	public Field getField() {
		return this.field;
	}

	public void setField(Field field) {
		this.field = field;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "uploader_id")
	public Suser getSuser() {
		return this.suser;
	}

	public void setSuser(Suser suser) {
		this.suser = suser;
	}

	@Column(name = "description", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "status", nullable = false)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "class", nullable = false)
	public String getClass_() {
		return this.class_;
	}

	public void setClass_(String class_) {
		this.class_ = class_;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_created", length = 29)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", length = 29)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "upload_time", length = 29)
	public Date getUploadTime() {
		return this.uploadTime;
	}

	public void setUploadTime(Date uploadTime) {
		this.uploadTime = uploadTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesField")
	public Set getReferences() {
		return this.references;
	}

	public void setReferences(Set references) {
		this.references = references;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesField")
	public Set getSpeciesFieldAudienceTypeses() {
		return this.speciesFieldAudienceTypeses;
	}

	public void setSpeciesFieldAudienceTypeses(Set speciesFieldAudienceTypeses) {
		this.speciesFieldAudienceTypeses = speciesFieldAudienceTypeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesField")
	public Set getSpeciesFieldLicenses() {
		return this.speciesFieldLicenses;
	}

	public void setSpeciesFieldLicenses(Set speciesFieldLicenses) {
		this.speciesFieldLicenses = speciesFieldLicenses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "speciesField")
	public Set getSpeciesFieldContributors() {
		return this.speciesFieldContributors;
	}

	public void setSpeciesFieldContributors(Set speciesFieldContributors) {
		this.speciesFieldContributors = speciesFieldContributors;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "species_field_resources", schema = "public", joinColumns = {
			@JoinColumn(name = "species_field_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "resource_id", nullable = false, updatable = false) })
	public Set getResources() {
		return this.resources;
	}

	public void setResources(Set resources) {
		this.resources = resources;
	}

}
