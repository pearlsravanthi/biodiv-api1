package biodiv;
// Generated 31 Jul, 2017 7:18:53 AM by Hibernate Tools 3.5.0.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Document generated by hbm2java
 */
@Entity
@Table(name = "document", schema = "public")
public class Document implements java.io.Serializable {

	private long id;
	private long version;
	private Language language;
	private License license;
	private Habitat habitat;
	private Coverage coverage;
	private SpeciesGroup speciesGroup;
	private Suser suser;
	private Ufile ufile;
	private Dataset dataset;
	private boolean agreeTerms;
	private String attribution;
	private String contributors;
	private Date createdOn;
	private String notes;
	private String doi;
	private Date lastRevised;
	private Long sourceHolderId;
	private String sourceHolderType;
	private String title;
	private String type;
	private Date fromDate;
	private Boolean geoPrivacy;
	private Double latitude;
	private String locationAccuracy;
	private Double longitude;
	private String placeName;
	private String reverseGeocodedName;
	private Date toDate;
	private Serializable topology;
	private Integer featureCount;
	private Integer flagCount;
	private String locationScale;
	private String externalId;
	private String externalUrl;
	private Date lastCrawled;
	private Date lastInterpreted;
	private String originalAuthor;
	private String viaCode;
	private String viaId;
	private int visitCount;
	private int rating;
	private boolean isDeleted;
	private Set documentHabitats = new HashSet(0);
	private Set userGroups = new HashSet(0);
	private Set documentSpeciesGroups = new HashSet(0);
	private Set docSciNames = new HashSet(0);
	private Set documentTokenUrls = new HashSet(0);
	private Set projectDocuments = new HashSet(0);

	public Document() {
	}

	public Document(long id, Language language, License license, boolean agreeTerms, Date createdOn, Date lastRevised,
			String title, String type, int visitCount, int rating, boolean isDeleted) {
		this.id = id;
		this.language = language;
		this.license = license;
		this.agreeTerms = agreeTerms;
		this.createdOn = createdOn;
		this.lastRevised = lastRevised;
		this.title = title;
		this.type = type;
		this.visitCount = visitCount;
		this.rating = rating;
		this.isDeleted = isDeleted;
	}

	public Document(long id, Language language, License license, Habitat habitat, Coverage coverage,
			SpeciesGroup speciesGroup, Suser suser, Ufile ufile, Dataset dataset, boolean agreeTerms,
			String attribution, String contributors, Date createdOn, String notes, String doi, Date lastRevised,
			Long sourceHolderId, String sourceHolderType, String title, String type, Date fromDate, Boolean geoPrivacy,
			Double latitude, String locationAccuracy, Double longitude, String placeName, String reverseGeocodedName,
			Date toDate, Serializable topology, Integer featureCount, Integer flagCount, String locationScale,
			String externalId, String externalUrl, Date lastCrawled, Date lastInterpreted, String originalAuthor,
			String viaCode, String viaId, int visitCount, int rating, boolean isDeleted, Set documentHabitats,
			Set userGroups, Set documentSpeciesGroups, Set docSciNames, Set documentTokenUrls, Set projectDocuments) {
		this.id = id;
		this.language = language;
		this.license = license;
		this.habitat = habitat;
		this.coverage = coverage;
		this.speciesGroup = speciesGroup;
		this.suser = suser;
		this.ufile = ufile;
		this.dataset = dataset;
		this.agreeTerms = agreeTerms;
		this.attribution = attribution;
		this.contributors = contributors;
		this.createdOn = createdOn;
		this.notes = notes;
		this.doi = doi;
		this.lastRevised = lastRevised;
		this.sourceHolderId = sourceHolderId;
		this.sourceHolderType = sourceHolderType;
		this.title = title;
		this.type = type;
		this.fromDate = fromDate;
		this.geoPrivacy = geoPrivacy;
		this.latitude = latitude;
		this.locationAccuracy = locationAccuracy;
		this.longitude = longitude;
		this.placeName = placeName;
		this.reverseGeocodedName = reverseGeocodedName;
		this.toDate = toDate;
		this.topology = topology;
		this.featureCount = featureCount;
		this.flagCount = flagCount;
		this.locationScale = locationScale;
		this.externalId = externalId;
		this.externalUrl = externalUrl;
		this.lastCrawled = lastCrawled;
		this.lastInterpreted = lastInterpreted;
		this.originalAuthor = originalAuthor;
		this.viaCode = viaCode;
		this.viaId = viaId;
		this.visitCount = visitCount;
		this.rating = rating;
		this.isDeleted = isDeleted;
		this.documentHabitats = documentHabitats;
		this.userGroups = userGroups;
		this.documentSpeciesGroups = documentSpeciesGroups;
		this.docSciNames = docSciNames;
		this.documentTokenUrls = documentTokenUrls;
		this.projectDocuments = projectDocuments;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "language_id", nullable = false)
	public Language getLanguage() {
		return this.language;
	}

	public void setLanguage(Language language) {
		this.language = language;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "license_id", nullable = false)
	public License getLicense() {
		return this.license;
	}

	public void setLicense(License license) {
		this.license = license;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "habitat_id")
	public Habitat getHabitat() {
		return this.habitat;
	}

	public void setHabitat(Habitat habitat) {
		this.habitat = habitat;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "coverage_id")
	public Coverage getCoverage() {
		return this.coverage;
	}

	public void setCoverage(Coverage coverage) {
		this.coverage = coverage;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "group_id")
	public SpeciesGroup getSpeciesGroup() {
		return this.speciesGroup;
	}

	public void setSpeciesGroup(SpeciesGroup speciesGroup) {
		this.speciesGroup = speciesGroup;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id")
	public Suser getSuser() {
		return this.suser;
	}

	public void setSuser(Suser suser) {
		this.suser = suser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "u_file_id")
	public Ufile getUfile() {
		return this.ufile;
	}

	public void setUfile(Ufile ufile) {
		this.ufile = ufile;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dataset_id")
	public Dataset getDataset() {
		return this.dataset;
	}

	public void setDataset(Dataset dataset) {
		this.dataset = dataset;
	}

	@Column(name = "agree_terms", nullable = false)
	public boolean isAgreeTerms() {
		return this.agreeTerms;
	}

	public void setAgreeTerms(boolean agreeTerms) {
		this.agreeTerms = agreeTerms;
	}

	@Column(name = "attribution")
	public String getAttribution() {
		return this.attribution;
	}

	public void setAttribution(String attribution) {
		this.attribution = attribution;
	}

	@Column(name = "contributors")
	public String getContributors() {
		return this.contributors;
	}

	public void setContributors(String contributors) {
		this.contributors = contributors;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", nullable = false, length = 29)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "notes")
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Column(name = "doi")
	public String getDoi() {
		return this.doi;
	}

	public void setDoi(String doi) {
		this.doi = doi;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_revised", nullable = false, length = 29)
	public Date getLastRevised() {
		return this.lastRevised;
	}

	public void setLastRevised(Date lastRevised) {
		this.lastRevised = lastRevised;
	}

	@Column(name = "source_holder_id")
	public Long getSourceHolderId() {
		return this.sourceHolderId;
	}

	public void setSourceHolderId(Long sourceHolderId) {
		this.sourceHolderId = sourceHolderId;
	}

	@Column(name = "source_holder_type")
	public String getSourceHolderType() {
		return this.sourceHolderType;
	}

	public void setSourceHolderType(String sourceHolderType) {
		this.sourceHolderType = sourceHolderType;
	}

	@Column(name = "title", nullable = false)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "type", nullable = false)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "from_date", length = 29)
	public Date getFromDate() {
		return this.fromDate;
	}

	public void setFromDate(Date fromDate) {
		this.fromDate = fromDate;
	}

	@Column(name = "geo_privacy")
	public Boolean getGeoPrivacy() {
		return this.geoPrivacy;
	}

	public void setGeoPrivacy(Boolean geoPrivacy) {
		this.geoPrivacy = geoPrivacy;
	}

	@Column(name = "latitude", precision = 17, scale = 17)
	public Double getLatitude() {
		return this.latitude;
	}

	public void setLatitude(Double latitude) {
		this.latitude = latitude;
	}

	@Column(name = "location_accuracy")
	public String getLocationAccuracy() {
		return this.locationAccuracy;
	}

	public void setLocationAccuracy(String locationAccuracy) {
		this.locationAccuracy = locationAccuracy;
	}

	@Column(name = "longitude", precision = 17, scale = 17)
	public Double getLongitude() {
		return this.longitude;
	}

	public void setLongitude(Double longitude) {
		this.longitude = longitude;
	}

	@Column(name = "place_name")
	public String getPlaceName() {
		return this.placeName;
	}

	public void setPlaceName(String placeName) {
		this.placeName = placeName;
	}

	@Column(name = "reverse_geocoded_name")
	public String getReverseGeocodedName() {
		return this.reverseGeocodedName;
	}

	public void setReverseGeocodedName(String reverseGeocodedName) {
		this.reverseGeocodedName = reverseGeocodedName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "to_date", length = 29)
	public Date getToDate() {
		return this.toDate;
	}

	public void setToDate(Date toDate) {
		this.toDate = toDate;
	}

	@Column(name = "topology")
	public Serializable getTopology() {
		return this.topology;
	}

	public void setTopology(Serializable topology) {
		this.topology = topology;
	}

	@Column(name = "feature_count")
	public Integer getFeatureCount() {
		return this.featureCount;
	}

	public void setFeatureCount(Integer featureCount) {
		this.featureCount = featureCount;
	}

	@Column(name = "flag_count")
	public Integer getFlagCount() {
		return this.flagCount;
	}

	public void setFlagCount(Integer flagCount) {
		this.flagCount = flagCount;
	}

	@Column(name = "location_scale")
	public String getLocationScale() {
		return this.locationScale;
	}

	public void setLocationScale(String locationScale) {
		this.locationScale = locationScale;
	}

	@Column(name = "external_id")
	public String getExternalId() {
		return this.externalId;
	}

	public void setExternalId(String externalId) {
		this.externalId = externalId;
	}

	@Column(name = "external_url")
	public String getExternalUrl() {
		return this.externalUrl;
	}

	public void setExternalUrl(String externalUrl) {
		this.externalUrl = externalUrl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_crawled", length = 29)
	public Date getLastCrawled() {
		return this.lastCrawled;
	}

	public void setLastCrawled(Date lastCrawled) {
		this.lastCrawled = lastCrawled;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_interpreted", length = 29)
	public Date getLastInterpreted() {
		return this.lastInterpreted;
	}

	public void setLastInterpreted(Date lastInterpreted) {
		this.lastInterpreted = lastInterpreted;
	}

	@Column(name = "original_author")
	public String getOriginalAuthor() {
		return this.originalAuthor;
	}

	public void setOriginalAuthor(String originalAuthor) {
		this.originalAuthor = originalAuthor;
	}

	@Column(name = "via_code")
	public String getViaCode() {
		return this.viaCode;
	}

	public void setViaCode(String viaCode) {
		this.viaCode = viaCode;
	}

	@Column(name = "via_id")
	public String getViaId() {
		return this.viaId;
	}

	public void setViaId(String viaId) {
		this.viaId = viaId;
	}

	@Column(name = "visit_count", nullable = false)
	public int getVisitCount() {
		return this.visitCount;
	}

	public void setVisitCount(int visitCount) {
		this.visitCount = visitCount;
	}

	@Column(name = "rating", nullable = false)
	public int getRating() {
		return this.rating;
	}

	public void setRating(int rating) {
		this.rating = rating;
	}

	@Column(name = "is_deleted", nullable = false)
	public boolean isIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "document")
	public Set getDocumentHabitats() {
		return this.documentHabitats;
	}

	public void setDocumentHabitats(Set documentHabitats) {
		this.documentHabitats = documentHabitats;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_group_documents", schema = "public", joinColumns = {
			@JoinColumn(name = "document_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_group_id", nullable = false, updatable = false) })
	public Set getUserGroups() {
		return this.userGroups;
	}

	public void setUserGroups(Set userGroups) {
		this.userGroups = userGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "document")
	public Set getDocumentSpeciesGroups() {
		return this.documentSpeciesGroups;
	}

	public void setDocumentSpeciesGroups(Set documentSpeciesGroups) {
		this.documentSpeciesGroups = documentSpeciesGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "document")
	public Set getDocSciNames() {
		return this.docSciNames;
	}

	public void setDocSciNames(Set docSciNames) {
		this.docSciNames = docSciNames;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "document")
	public Set getDocumentTokenUrls() {
		return this.documentTokenUrls;
	}

	public void setDocumentTokenUrls(Set documentTokenUrls) {
		this.documentTokenUrls = documentTokenUrls;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "document")
	public Set getProjectDocuments() {
		return this.projectDocuments;
	}

	public void setProjectDocuments(Set projectDocuments) {
		this.projectDocuments = projectDocuments;
	}

}
