package biodiv;
// Generated 31 Jul, 2017 7:18:53 AM by Hibernate Tools 3.5.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Language generated by hbm2java
 */
@Entity
@Table(name = "language", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "three_letter_code"))
public class Language implements java.io.Serializable {

	private long id;
	private String name;
	private String threeLetterCode;
	private String twoLetterCode;
	private Boolean isDirty;
	private String region;
	private Set newsletters = new HashSet(0);
	private Set comments = new HashSet(0);
	private Set featureds = new HashSet(0);
	private Set classifications = new HashSet(0);
	private Set datasources = new HashSet(0);
	private Set userGroups = new HashSet(0);
	private Set speciesFields = new HashSet(0);
	private Set documents = new HashSet(0);
	private Set observations = new HashSet(0);
	private Set commonNameses = new HashSet(0);
	private Set fields = new HashSet(0);
	private Set discussions = new HashSet(0);
	private Set datasetsForLanguageId = new HashSet(0);
	private Set resources = new HashSet(0);
	private Set susers = new HashSet(0);
	private Set datasetsForDataLanguageId = new HashSet(0);

	public Language() {
	}

	public Language(long id, String name, String threeLetterCode) {
		this.id = id;
		this.name = name;
		this.threeLetterCode = threeLetterCode;
	}

	public Language(long id, String name, String threeLetterCode, String twoLetterCode, Boolean isDirty, String region,
			Set newsletters, Set comments, Set featureds, Set classifications, Set datasources, Set userGroups,
			Set speciesFields, Set documents, Set observations, Set commonNameses, Set fields, Set discussions,
			Set datasetsForLanguageId, Set resources, Set susers, Set datasetsForDataLanguageId) {
		this.id = id;
		this.name = name;
		this.threeLetterCode = threeLetterCode;
		this.twoLetterCode = twoLetterCode;
		this.isDirty = isDirty;
		this.region = region;
		this.newsletters = newsletters;
		this.comments = comments;
		this.featureds = featureds;
		this.classifications = classifications;
		this.datasources = datasources;
		this.userGroups = userGroups;
		this.speciesFields = speciesFields;
		this.documents = documents;
		this.observations = observations;
		this.commonNameses = commonNameses;
		this.fields = fields;
		this.discussions = discussions;
		this.datasetsForLanguageId = datasetsForLanguageId;
		this.resources = resources;
		this.susers = susers;
		this.datasetsForDataLanguageId = datasetsForDataLanguageId;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "three_letter_code", unique = true, nullable = false)
	public String getThreeLetterCode() {
		return this.threeLetterCode;
	}

	public void setThreeLetterCode(String threeLetterCode) {
		this.threeLetterCode = threeLetterCode;
	}

	@Column(name = "two_letter_code")
	public String getTwoLetterCode() {
		return this.twoLetterCode;
	}

	public void setTwoLetterCode(String twoLetterCode) {
		this.twoLetterCode = twoLetterCode;
	}

	@Column(name = "is_dirty")
	public Boolean getIsDirty() {
		return this.isDirty;
	}

	public void setIsDirty(Boolean isDirty) {
		this.isDirty = isDirty;
	}

	@Column(name = "region")
	public String getRegion() {
		return this.region;
	}

	public void setRegion(String region) {
		this.region = region;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getNewsletters() {
		return this.newsletters;
	}

	public void setNewsletters(Set newsletters) {
		this.newsletters = newsletters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getComments() {
		return this.comments;
	}

	public void setComments(Set comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getFeatureds() {
		return this.featureds;
	}

	public void setFeatureds(Set featureds) {
		this.featureds = featureds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getClassifications() {
		return this.classifications;
	}

	public void setClassifications(Set classifications) {
		this.classifications = classifications;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getDatasources() {
		return this.datasources;
	}

	public void setDatasources(Set datasources) {
		this.datasources = datasources;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getUserGroups() {
		return this.userGroups;
	}

	public void setUserGroups(Set userGroups) {
		this.userGroups = userGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getSpeciesFields() {
		return this.speciesFields;
	}

	public void setSpeciesFields(Set speciesFields) {
		this.speciesFields = speciesFields;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getDocuments() {
		return this.documents;
	}

	public void setDocuments(Set documents) {
		this.documents = documents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getObservations() {
		return this.observations;
	}

	public void setObservations(Set observations) {
		this.observations = observations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getCommonNameses() {
		return this.commonNameses;
	}

	public void setCommonNameses(Set commonNameses) {
		this.commonNameses = commonNameses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getFields() {
		return this.fields;
	}

	public void setFields(Set fields) {
		this.fields = fields;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getDiscussions() {
		return this.discussions;
	}

	public void setDiscussions(Set discussions) {
		this.discussions = discussions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "languageByLanguageId")
	public Set getDatasetsForLanguageId() {
		return this.datasetsForLanguageId;
	}

	public void setDatasetsForLanguageId(Set datasetsForLanguageId) {
		this.datasetsForLanguageId = datasetsForLanguageId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getResources() {
		return this.resources;
	}

	public void setResources(Set resources) {
		this.resources = resources;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
	public Set getSusers() {
		return this.susers;
	}

	public void setSusers(Set susers) {
		this.susers = susers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "languageByDataLanguageId")
	public Set getDatasetsForDataLanguageId() {
		return this.datasetsForDataLanguageId;
	}

	public void setDatasetsForDataLanguageId(Set datasetsForDataLanguageId) {
		this.datasetsForDataLanguageId = datasetsForDataLanguageId;
	}

}
