package biodiv;
// Generated 31 Jul, 2017 7:18:53 AM by Hibernate Tools 3.5.0.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Digest generated by hbm2java
 */
@Entity
@Table(name = "digest", schema = "public")
public class Digest implements java.io.Serializable {

	private long id;
	private long version;
	private UserGroup userGroup;
	private boolean forDoc;
	private boolean forObv;
	private boolean forSp;
	private boolean forUsers;
	private Date lastSent;
	private int threshold;
	private Boolean sendTopContributors;
	private Boolean sendTopidproviders;

	public Digest() {
	}

	public Digest(long id, UserGroup userGroup, boolean forDoc, boolean forObv, boolean forSp, boolean forUsers,
			Date lastSent, int threshold) {
		this.id = id;
		this.userGroup = userGroup;
		this.forDoc = forDoc;
		this.forObv = forObv;
		this.forSp = forSp;
		this.forUsers = forUsers;
		this.lastSent = lastSent;
		this.threshold = threshold;
	}

	public Digest(long id, UserGroup userGroup, boolean forDoc, boolean forObv, boolean forSp, boolean forUsers,
			Date lastSent, int threshold, Boolean sendTopContributors, Boolean sendTopidproviders) {
		this.id = id;
		this.userGroup = userGroup;
		this.forDoc = forDoc;
		this.forObv = forObv;
		this.forSp = forSp;
		this.forUsers = forUsers;
		this.lastSent = lastSent;
		this.threshold = threshold;
		this.sendTopContributors = sendTopContributors;
		this.sendTopidproviders = sendTopidproviders;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_group_id", nullable = false)
	public UserGroup getUserGroup() {
		return this.userGroup;
	}

	public void setUserGroup(UserGroup userGroup) {
		this.userGroup = userGroup;
	}

	@Column(name = "for_doc", nullable = false)
	public boolean isForDoc() {
		return this.forDoc;
	}

	public void setForDoc(boolean forDoc) {
		this.forDoc = forDoc;
	}

	@Column(name = "for_obv", nullable = false)
	public boolean isForObv() {
		return this.forObv;
	}

	public void setForObv(boolean forObv) {
		this.forObv = forObv;
	}

	@Column(name = "for_sp", nullable = false)
	public boolean isForSp() {
		return this.forSp;
	}

	public void setForSp(boolean forSp) {
		this.forSp = forSp;
	}

	@Column(name = "for_users", nullable = false)
	public boolean isForUsers() {
		return this.forUsers;
	}

	public void setForUsers(boolean forUsers) {
		this.forUsers = forUsers;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_sent", nullable = false, length = 29)
	public Date getLastSent() {
		return this.lastSent;
	}

	public void setLastSent(Date lastSent) {
		this.lastSent = lastSent;
	}

	@Column(name = "threshold", nullable = false)
	public int getThreshold() {
		return this.threshold;
	}

	public void setThreshold(int threshold) {
		this.threshold = threshold;
	}

	@Column(name = "send_top_contributors")
	public Boolean getSendTopContributors() {
		return this.sendTopContributors;
	}

	public void setSendTopContributors(Boolean sendTopContributors) {
		this.sendTopContributors = sendTopContributors;
	}

	@Column(name = "send_topidproviders")
	public Boolean getSendTopidproviders() {
		return this.sendTopidproviders;
	}

	public void setSendTopidproviders(Boolean sendTopidproviders) {
		this.sendTopidproviders = sendTopidproviders;
	}

}
