package biodiv;
// Generated 31 Jul, 2017 7:18:53 AM by Hibernate Tools 3.5.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Synonyms generated by hbm2java
 */
@Entity
@Table(name = "synonyms", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = { "canonical_form",
		"taxon_concept_id", "relationship" }))
public class Synonyms implements java.io.Serializable {

	private long id;
	private Suser suser;
	private TaxonomyDefinition taxonomyDefinition;
	private String name;
	private String relationship;
	private String binomialForm;
	private String canonicalForm;
	private String italicisedForm;
	private String normalizedForm;
	private Date uploadTime;
	private String status;
	private String position;
	private String authorYear;
	private String matchDatabaseName;
	private String matchId;
	private String ibpSource;
	private String viaDatasource;
	private String dropReason;
	private String activityDescription;
	private String nameSourceId;
	private Set synonymsSusers = new HashSet(0);

	public Synonyms() {
	}

	public Synonyms(long id, TaxonomyDefinition taxonomyDefinition, String name) {
		this.id = id;
		this.taxonomyDefinition = taxonomyDefinition;
		this.name = name;
	}

	public Synonyms(long id, Suser suser, TaxonomyDefinition taxonomyDefinition, String name, String relationship,
			String binomialForm, String canonicalForm, String italicisedForm, String normalizedForm, Date uploadTime,
			String status, String position, String authorYear, String matchDatabaseName, String matchId,
			String ibpSource, String viaDatasource, String dropReason, String activityDescription, String nameSourceId,
			Set synonymsSusers) {
		this.id = id;
		this.suser = suser;
		this.taxonomyDefinition = taxonomyDefinition;
		this.name = name;
		this.relationship = relationship;
		this.binomialForm = binomialForm;
		this.canonicalForm = canonicalForm;
		this.italicisedForm = italicisedForm;
		this.normalizedForm = normalizedForm;
		this.uploadTime = uploadTime;
		this.status = status;
		this.position = position;
		this.authorYear = authorYear;
		this.matchDatabaseName = matchDatabaseName;
		this.matchId = matchId;
		this.ibpSource = ibpSource;
		this.viaDatasource = viaDatasource;
		this.dropReason = dropReason;
		this.activityDescription = activityDescription;
		this.nameSourceId = nameSourceId;
		this.synonymsSusers = synonymsSusers;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "uploader_id")
	public Suser getSuser() {
		return this.suser;
	}

	public void setSuser(Suser suser) {
		this.suser = suser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "taxon_concept_id", nullable = false)
	public TaxonomyDefinition getTaxonomyDefinition() {
		return this.taxonomyDefinition;
	}

	public void setTaxonomyDefinition(TaxonomyDefinition taxonomyDefinition) {
		this.taxonomyDefinition = taxonomyDefinition;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "relationship")
	public String getRelationship() {
		return this.relationship;
	}

	public void setRelationship(String relationship) {
		this.relationship = relationship;
	}

	@Column(name = "binomial_form")
	public String getBinomialForm() {
		return this.binomialForm;
	}

	public void setBinomialForm(String binomialForm) {
		this.binomialForm = binomialForm;
	}

	@Column(name = "canonical_form")
	public String getCanonicalForm() {
		return this.canonicalForm;
	}

	public void setCanonicalForm(String canonicalForm) {
		this.canonicalForm = canonicalForm;
	}

	@Column(name = "italicised_form")
	public String getItalicisedForm() {
		return this.italicisedForm;
	}

	public void setItalicisedForm(String italicisedForm) {
		this.italicisedForm = italicisedForm;
	}

	@Column(name = "normalized_form")
	public String getNormalizedForm() {
		return this.normalizedForm;
	}

	public void setNormalizedForm(String normalizedForm) {
		this.normalizedForm = normalizedForm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "upload_time", length = 29)
	public Date getUploadTime() {
		return this.uploadTime;
	}

	public void setUploadTime(Date uploadTime) {
		this.uploadTime = uploadTime;
	}

	@Column(name = "status")
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "position")
	public String getPosition() {
		return this.position;
	}

	public void setPosition(String position) {
		this.position = position;
	}

	@Column(name = "author_year")
	public String getAuthorYear() {
		return this.authorYear;
	}

	public void setAuthorYear(String authorYear) {
		this.authorYear = authorYear;
	}

	@Column(name = "match_database_name")
	public String getMatchDatabaseName() {
		return this.matchDatabaseName;
	}

	public void setMatchDatabaseName(String matchDatabaseName) {
		this.matchDatabaseName = matchDatabaseName;
	}

	@Column(name = "match_id")
	public String getMatchId() {
		return this.matchId;
	}

	public void setMatchId(String matchId) {
		this.matchId = matchId;
	}

	@Column(name = "ibp_source")
	public String getIbpSource() {
		return this.ibpSource;
	}

	public void setIbpSource(String ibpSource) {
		this.ibpSource = ibpSource;
	}

	@Column(name = "via_datasource")
	public String getViaDatasource() {
		return this.viaDatasource;
	}

	public void setViaDatasource(String viaDatasource) {
		this.viaDatasource = viaDatasource;
	}

	@Column(name = "drop_reason")
	public String getDropReason() {
		return this.dropReason;
	}

	public void setDropReason(String dropReason) {
		this.dropReason = dropReason;
	}

	@Column(name = "activity_description")
	public String getActivityDescription() {
		return this.activityDescription;
	}

	public void setActivityDescription(String activityDescription) {
		this.activityDescription = activityDescription;
	}

	@Column(name = "name_source_id")
	public String getNameSourceId() {
		return this.nameSourceId;
	}

	public void setNameSourceId(String nameSourceId) {
		this.nameSourceId = nameSourceId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "synonyms")
	public Set getSynonymsSusers() {
		return this.synonymsSusers;
	}

	public void setSynonymsSusers(Set synonymsSusers) {
		this.synonymsSusers = synonymsSusers;
	}

}
