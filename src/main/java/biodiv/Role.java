package biodiv;
// Generated 31 Jul, 2017 7:18:53 AM by Hibernate Tools 3.5.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "role", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "authority"))
public class Role implements java.io.Serializable {

	private long id;
	private long version;
	private String authority;
	private Set userGroupMemberRoles = new HashSet(0);
	private Set susers = new HashSet(0);

	public Role() {
	}

	public Role(long id, String authority) {
		this.id = id;
		this.authority = authority;
	}

	public Role(long id, String authority, Set userGroupMemberRoles, Set susers) {
		this.id = id;
		this.authority = authority;
		this.userGroupMemberRoles = userGroupMemberRoles;
		this.susers = susers;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@Column(name = "authority", unique = true, nullable = false)
	public String getAuthority() {
		return this.authority;
	}

	public void setAuthority(String authority) {
		this.authority = authority;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "role")
	public Set getUserGroupMemberRoles() {
		return this.userGroupMemberRoles;
	}

	public void setUserGroupMemberRoles(Set userGroupMemberRoles) {
		this.userGroupMemberRoles = userGroupMemberRoles;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "suser_role", schema = "public", joinColumns = {
			@JoinColumn(name = "role_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "s_user_id", nullable = false, updatable = false) })
	public Set getSusers() {
		return this.susers;
	}

	public void setSusers(Set susers) {
		this.susers = susers;
	}

}
