package biodiv;
// Generated 31 Jul, 2017 7:18:53 AM by Hibernate Tools 3.5.0.Final

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;

/**
 * Coverage generated by hbm2java
 */
@Entity
@Table(name = "coverage", schema = "public")
public class Coverage implements java.io.Serializable {

	private long id;
	private long version;
	private boolean geoPrivacy;
	private float latitude;
	private String location;
	private String locationAccuracy;
	private float longitude;
	private String placeName;
	private String reverseGeocodedName;
	private Serializable topology;
	private Set documents = new HashSet(0);
	private Set coverageHabitats = new HashSet(0);
	private Set coverageSpeciesGroups = new HashSet(0);

	public Coverage() {
	}

	public Coverage(long id, boolean geoPrivacy, float latitude, float longitude) {
		this.id = id;
		this.geoPrivacy = geoPrivacy;
		this.latitude = latitude;
		this.longitude = longitude;
	}

	public Coverage(long id, boolean geoPrivacy, float latitude, String location, String locationAccuracy,
			float longitude, String placeName, String reverseGeocodedName, Serializable topology, Set documents,
			Set coverageHabitats, Set coverageSpeciesGroups) {
		this.id = id;
		this.geoPrivacy = geoPrivacy;
		this.latitude = latitude;
		this.location = location;
		this.locationAccuracy = locationAccuracy;
		this.longitude = longitude;
		this.placeName = placeName;
		this.reverseGeocodedName = reverseGeocodedName;
		this.topology = topology;
		this.documents = documents;
		this.coverageHabitats = coverageHabitats;
		this.coverageSpeciesGroups = coverageSpeciesGroups;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@Column(name = "geo_privacy", nullable = false)
	public boolean isGeoPrivacy() {
		return this.geoPrivacy;
	}

	public void setGeoPrivacy(boolean geoPrivacy) {
		this.geoPrivacy = geoPrivacy;
	}

	@Column(name = "latitude", nullable = false, precision = 8, scale = 8)
	public float getLatitude() {
		return this.latitude;
	}

	public void setLatitude(float latitude) {
		this.latitude = latitude;
	}

	@Column(name = "location")
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "location_accuracy")
	public String getLocationAccuracy() {
		return this.locationAccuracy;
	}

	public void setLocationAccuracy(String locationAccuracy) {
		this.locationAccuracy = locationAccuracy;
	}

	@Column(name = "longitude", nullable = false, precision = 8, scale = 8)
	public float getLongitude() {
		return this.longitude;
	}

	public void setLongitude(float longitude) {
		this.longitude = longitude;
	}

	@Column(name = "place_name")
	public String getPlaceName() {
		return this.placeName;
	}

	public void setPlaceName(String placeName) {
		this.placeName = placeName;
	}

	@Column(name = "reverse_geocoded_name")
	public String getReverseGeocodedName() {
		return this.reverseGeocodedName;
	}

	public void setReverseGeocodedName(String reverseGeocodedName) {
		this.reverseGeocodedName = reverseGeocodedName;
	}

	@Column(name = "topology")
	public Serializable getTopology() {
		return this.topology;
	}

	public void setTopology(Serializable topology) {
		this.topology = topology;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coverage")
	public Set getDocuments() {
		return this.documents;
	}

	public void setDocuments(Set documents) {
		this.documents = documents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coverage")
	public Set getCoverageHabitats() {
		return this.coverageHabitats;
	}

	public void setCoverageHabitats(Set coverageHabitats) {
		this.coverageHabitats = coverageHabitats;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coverage")
	public Set getCoverageSpeciesGroups() {
		return this.coverageSpeciesGroups;
	}

	public void setCoverageSpeciesGroups(Set coverageSpeciesGroups) {
		this.coverageSpeciesGroups = coverageSpeciesGroups;
	}

}
